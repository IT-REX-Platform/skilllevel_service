type Query {
"""
Get the skill levels of the current user for all skill types (Bloom taxonomy) in a chapter of a course.
If chapterId is null, then the skill levels for the course are returned.
"""
userSkillLevels(chapterId: UUID): SkillLevels!

"""
Get the skill levels of the specified user for all skill types (Bloom taxonomy) in a chapter of a course.
If chapterId is null, then the skill levels for the course are returned.
"""
skillLevelsForUser(chapterId: UUID, userId: UUID!): SkillLevels!
}
type Mutation {
  """
  ONLY FOR TESTING PURPOSES. DO NOT USE IN FRONTEND. WILL BE REMOVED.

  Triggers the recalculation of the skill level of the user.
  This is done automatically at some time in the night.

  The purpose of this mutation is to allow testing of the reward score and demonstrate the functionality.
  """
  recalculateLevels(chapterId: UUID!, userId: UUID!): SkillLevels! @deprecated(reason: "Only for testing purposes. Will be removed.")
}

"""
The four skill level of a user.
"""
type SkillLevels {
  """
  remember represents how much user remember the concept
  """
  remember: SkillLevel!
  """
  understand represents how well the user understands learned content.
  """
  understand: SkillLevel!

  """
  apply represents the how well user applies the learned concept during assessment.
  """
  apply: SkillLevel!
  """
  apply is how much user can evaluate information and draw conclusions
  """
  analyze: SkillLevel!
}
"""
The skill level of a user.
"""
type SkillLevel {
  """
  The value of the skill level.
  levels are between 0 and 100.
  """
  value: Float!
  """
  A log of the changes to the skill level
  """
  log: [SkillLevelLogItem!]!
}

"""
An item in the skill level change log.
"""
type SkillLevelLogItem {
  """
  The date when the skill level changed.
  """
  date: DateTime!
  """
  The difference between the previous and the new skill level.
  """
  difference: Float!
  """
  The old skill level.
  """
  oldValue: Float!
  """
  The new skill level.
  """
  newValue: Float!
  """
  The ids of the contents that are associated with the change.
  """
  associatedContentIds: [UUID!]!
}